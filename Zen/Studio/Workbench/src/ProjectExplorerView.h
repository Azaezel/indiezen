//---------------------------------------------------------------------------
//
// Name:        ProjectExplorerView.h
// Author:      Tony Richards
// Created:     1/30/2009 4:56:27 PM
// Description: ProjectExplorerView class declaration
//
// This file is non-standard because it was generated by wxDev-C++.
/// @todo Standardize the file
//---------------------------------------------------------------------------

#ifndef __PROJECTEXPLORERFRAME_h__
#define __PROJECTEXPLORERFRAME_h__

#ifdef __BORLANDC__
	#pragma hdrstop
#endif

#ifndef WX_PRECOMP
	#include <wx/wx.h>
	#include <wx/frame.h>
#else
	#include <wx/wxprec.h>
#endif

//Do not add custom headers between 
//Header Include Start and Header Include End.
//wxDev-C++ designer will remove them. Add custom headers after the block.
////Header Include Start
#include <wx/treectrl.h>
#include <wx/sizer.h>
////Header Include End

#include <Zen/Studio/Workbench/I_ProjectExplorerWidget.hpp>

#include <Zen/Studio/WorkbenchCommon/I_ExplorerNode.hpp>
#include <Zen/Studio/WorkbenchCommon/I_Project.hpp>
#include <Zen/Studio/WorkbenchCommon/I_ProjectExplorerModel.hpp>


#include <string>
#include <map>

////Dialog Style Start
#undef ProjectExplorerView_STYLE
#define ProjectExplorerView_STYLE wxDEFAULT_FRAME_STYLE
////Dialog Style End

class ProjectExplorerView 
:   public wxPanel
,   public Zen::Studio::Workbench::I_ProjectExplorerWidget
{
    typedef Zen::Memory::managed_ptr<Zen::Studio::Workbench::I_ProjectExplorerModel>
        pProjectExplorerModel_type;
	private:
		DECLARE_EVENT_TABLE();
		
	public:
		ProjectExplorerView(wxWindow *parent, wxWindowID id = 1, const wxString &title = wxT("Projects"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = ProjectExplorerView_STYLE);
		virtual ~ProjectExplorerView();
		
        void setModel(pProjectExplorerModel_type _pModel);
        
        void setImage(const std::string& _imageName, const wxTreeItemId& _id);
    public:
        void handleNewProject(Zen::Studio::Workbench::I_ExplorerNode* _pProject);
        void handleNewChildNode(Zen::Studio::Workbench::I_ExplorerNode* _pProject);

		void handleRightClick(wxTreeEvent& event);
		void handleBeginLabelEdit(wxTreeEvent& event);
		void handleEndLabelEdit(wxTreeEvent& event);
        void handleActivate(wxTreeEvent& event);
        void handleBeginDrag(wxTreeEvent& event);
        void handleEndDrag(wxTreeEvent& event);

    /// @name I_ProjectExplorerModel implementation
    /// @{
public:
    virtual void onAddProject(pProject_type _pProject);
    virtual void onDeleteProject(pProject_type _pProject);
    virtual void onAddNode(Zen::Studio::Workbench::I_ExplorerNode& _node);
    virtual void onDeleteNode(Zen::Studio::Workbench::I_ExplorerNode& _node);
    /// @}

    /// @name I_ProjectExplorerWidget implementation
    /// @{
public:
    virtual bool beginLabelEdit(Zen::Studio::Workbench::I_ExplorerNode& _node);
    /// @}

	private:
		//Do not add custom control declarations between
		//GUI Control Declaration Start and GUI Control Declaration End.
		//wxDev-C++ will remove them. Add custom code after the block.
		////GUI Control Declaration Start
		wxTreeCtrl *WxTreeCtrl1;
		//wxBoxSizer *WxBoxSizer1;
        wxGridSizer *WxBoxSizer1;
		////GUI Control Declaration End
		
        wxTreeItemId                m_parent;
        pProjectExplorerModel_type  m_pModel;

        typedef std::map<std::string, int>                  ImageListMap_type;
        ImageListMap_type                                   m_imageList;

        Zen::Studio::Workbench::I_ProjectExplorerModel::pSubscription_type          m_pSubscription;

        Zen::Studio::Workbench::I_ExplorerNode*             m_pDraggingNode;
	private:
		//Note: if you receive any error with these enum IDs, then you need to
		//change your old form code that are based on the #define control IDs.
		//#defines may replace a numeric value for the enum names.
		//Try copy and pasting the below block in your old form header files.
		enum
		{
			////GUI Enum Control ID Start
			ID_WXTREECTRL1 = 1002,
			////GUI Enum Control ID End
			ID_DUMMY_VALUE_ //don't remove this value unless you have other enum values
		};
		
	private:
		void OnClose(wxCloseEvent& event);
		void CreateGUIControls();
};

#endif
