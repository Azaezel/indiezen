//-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~
// Zen Protocol
//
// Copyright (C) 2001 - 2009 Tony Richards
// Copyright (C) 2008 - 2009 Matthew Alan Gray
//
// Licensed under the Games by Sarge Publishing License - See your licensing
// agreement for terms and conditions.
//
// Do not redistribute this source code.
//
// Tony Richards trichards@gamesbysarge.com
// Matthew Alan Gray mgray@indiezen.org
//-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~
// This is generated by the Zen Protocol Code Generator.  Do not modify!
//-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~
#ifndef GAMEBUILDER_RESPONSE_HPP_INCLUDED
#define GAMEBUILDER_RESPONSE_HPP_INCLUDED

#include "Message.hpp"

#include <Zen/Enterprise/AppServer/I_Response.hpp>

//-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~
namespace Zen {
    namespace Enterprise {
        namespace AppServer {
            class I_MessageFactory;
        }   // namespace AppServer
    }   // namespace Enterprise
}   //  namespace Zen
//-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~
namespace GameBuilder {
//-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~

class Response
:   public virtual GameBuilder::Message
,   public Zen::Enterprise::AppServer::I_Response
{
    /// @name Types
    /// @{
public:
    /// @}

    /// @name Message dominance fixup
    /// @{
public:
    virtual pEndpoint_type getSourceEndpoint() { return Message::getSourceEndpoint(); }
    virtual pEndpoint_type getDestinationEndpoint() { return Message::getDestinationEndpoint(); }
    virtual pMessageHeader_type getMessageHeader() const { return Message::getMessageHeader(); }
    virtual unsigned int getMessageId() const { return Message::getMessageId(); }
    /// @}
    
    /// @name Zen::Enterprise::AppServer::I_Response implementation
    /// @{
public:
    virtual unsigned int getRequestMessageId() const;
    /// @}

    /// @name 'Structors
    /// @{
protected:
             Response(pMessageHeader_type _pMessageHeader,
                     pEndpoint_type _pSourceEndpoint,
                     pEndpoint_type _pDestinationEndpoint,
                     unsigned int _requestMessageId);
    virtual ~Response();
    /// @}

    /// @name Member Variables
    /// @{
private:
    unsigned int    m_requestMessageId;
    /// @}

};  // class Response

//-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~
}   // namespace GameBuilder
//-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~

#endif // GAMEBUILDER_RESPONSE_HPP_INCLUDED
