//-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~
// Zen Protocol
//
// Copyright (C) 2001 - 2009 Tony Richards
// Copyright (C) 2008 - 2009 Matthew Alan Gray
//
// Licensed under the Games by Sarge Publishing License - See your licensing
// agreement for terms and conditions.
//
// Do not redistribute this source code.
//
// Tony Richards trichards@gamesbysarge.com
// Matthew Alan Gray mgray@indiezen.org
//-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~
// This is generated by the Zen Protocol Code Generator.  Do not modify!
//-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~
#ifndef GAMEBUILDER_MESSAGE_HPP_INCLUDED
#define GAMEBUILDER_MESSAGE_HPP_INCLUDED

#include "../I_Message.hpp"

//-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~
namespace Zen {
    namespace Enterprise {
        namespace AppServer {
            class I_MessageFactory;
        }   // namespace AppServer
    }   // namespace Enterprise
}   //  namespace Zen
//-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~
namespace GameBuilder {
//-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~

class Message
:   public virtual GameBuilder::I_Message
{
    /// @name Types
    /// @{
public:
    typedef Zen::Memory::managed_ptr<Zen::Enterprise::AppServer::I_MessageFactory>      pMessageFactory_type;
    typedef Zen::Memory::managed_weak_ptr<Zen::Enterprise::AppServer::I_MessageFactory> wpMessageFactory_type;
    /// @}

    /// @name Zen::Enterprise::AppServer::I_Message implementation
    /// @{
public:
    virtual pEndpoint_type getSourceEndpoint();
    virtual pEndpoint_type getDestinationEndpoint();
    virtual pMessageHeader_type getMessageHeader() const;
    /// @}
    
    /// @name I_Message implementation
    /// @{
public:
    virtual unsigned int getMessageId() const;
    /// @}

    /// @name Static methods
    /// @{
public:
    static void destroyMessageFactory(wpMessageFactory_type _wpMessageFactory);
    /// @}

    /// @name 'Structors
    /// @{
protected:
    friend class MessageFactory;
             Message(pMessageHeader_type _pMessageHeader,
                     pEndpoint_type _pSourceEndpoint,
                     pEndpoint_type _pDestinationEndpoint);
    virtual ~Message();
    /// @}

    /// @name Member Variables
    /// @{
protected:
    static pMessageFactory_type sm_pMessageFactory;
private:
    pEndpoint_type          m_pSourceEndpoint;
    pEndpoint_type          m_pDestinationEndpoint;
    pMessageHeader_type     m_pMessageHeader;
    /// @}

};  // class Message

//-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~
}   // namespace GameBuilder
//-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~

#endif // GAMEBUILDER_MESSAGE_HPP_INCLUDED
