cmake_minimum_required (VERSION 2.6) 

project(Tutorial2)

if ( NOT INDIEZEN_PARENT)
	find_path ( INDIEZEN_PARENT Zen .. ../.. ../../.. ENV )
endif (NOT INDIEZEN_PARENT)

set(CMAKE_MODULE_PATH "${INDIEZEN_PARENT}/Zen/build/CMake/Modules" ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_MODULE_PATH})
list (REMOVE_DUPLICATES CMAKE_MODULE_PATH)

Find_Package(IndieZen REQUIRED)
Find_Package(Boost REQUIRED COMPONENTS system filesystem )
Find_Package(LibXml2 REQUIRED)
Find_Package(OGRE REQUIRED)

SET (LIB_TYPE SHARED)

#-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-
# Include various modules of Zen Engine

<%GroupList%>
	
set ( Tutorial2_SRC
<%SourceList%>
    )

add_definitions( -DTutorial2_EXPORTS )

include_directories ( ${Boost_INCLUDE_DIR} ${INDIEZEN_PARENT} ${OGRE_INCLUDE_DIR} )

link_directories ( ${DEV_LIB} ${Boost_LIBRARY_DIRS} ${LibXML2_LIBRARY_DIRS} /usr/local/lib )

add_library ( Tutorial2 ${LIB_TYPE} ${Tutorial2_SRC} )

add_dependencies( Tutorial2 ZenCore ZenEngine BaseClient BaseCommon )

target_link_libraries( Tutorial2 ZenCore ZenEngine BaseClient BaseCommon ${Boost_LIBRARIES} ${LIBXML2_LIBRARIES} )

set ( CLIENT_LIBRARIES_PATH "${Boost_LIBRARY_DIRS};${PC_LIBXML_LIBDIR};${OGRE_LIBRARY_DIRS};${DEV_BIN}" )

create_zgameloader_vcproj_userfile(Tutorial2)


set_target_properties ( Tutorial2 
						PROPERTIES
						DEBUG_POSTFIX "_d"
					)

configure_file(
	${INDIEZEN_PARENT}/Zen/tutorials/Tutorial2/client.xml.template
	${INDIEZEN_PARENT}/Zen/tutorials/Tutorial2/client.xml
	@ONLY
)
					
if (MSVC_IDE)
    # hack to get around the "Debug" and "Release" directories cmake tries to add on Windows
    set_target_properties ( Tutorial2 PROPERTIES PREFIX "../../bin/" )
	set_target_properties ( Tutorial2 PROPERTIES IMPORT_PREFIX "../../lib/" )
endif(MSVC_IDE)
